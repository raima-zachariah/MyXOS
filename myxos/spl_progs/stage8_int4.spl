//calc the physicalSP using formula
  
  alias physicalSP S0;
physicalSP = ([PTBR + 2 * (SP / 512)] * 512) + (SP % 512);

//calc the current PID
alias currentPID S14;
currentPID = (PTBR - 1024) / 8;


//calc the current PCB
alias currentPCB S13;
currentPCB = READY_LIST + 32 * currentPID;

//get the sysCallNo
alias sysCallNo S1;
sysCallNo = [physicalSP-1];

// Get arguments from stack 
alias arg1 S2;
arg1 = [physicalSP-4];   //file Descripor

alias arg2 S10;           //word to write
arg2 = [physicalSP-3];


alias counter S3;
counter = 1;

alias offset S4;
offset = 0;

alias flag S5;
flag = 0;

alias DFL S6;
DFL = 3072;

alias index S7;  //FAT index
index = 0;

alias basic_block S8;

alias data_block S9;

alias field1 S11;  //SWOFT index

alias field2 S12; //LSEEK

counter = 0;
flag=0;
offset = 0;

if( sysCallNo == 5) then
	if(arg1 < 0 || arg1 > 7) then   //fileDesc validity check
		  [ physicalSP-2 ] = -1;
		  ireturn;		
	endif;
 
	field1 = [ currentPCB + 15 + 2 * arg1 ];       //SWOFTidx
    	field2 = [currentPCB + 15 + 2 * arg1 + 1];     //LSEEK
    
 	if( field1  == -1 ) then
   		[ physicalSP-2 ] = -1;
   		ireturn;
 	endif;
   
    	index =  [ FILE_TABLE + 2 * field1];        //FATidx
   	basic_block = [ FAT + 8 * index + 2 ];
   	load(1,basic_block);
   	index = field2 / 512;    //index of the basic_block entry
   
   	flag = 0;
   	if([index + 512] == -1) then              //chk if free blocks are available
        	counter = 23;
       		while( counter < 448) do
       			if( [DISK_LIST + counter] == 0) then
       				flag = 1;
       				[DISK_LIST + counter] = 1;    //set 1 to DFL entry
      
       				break;
       			endif;
       			counter = counter + 1;
       		endwhile;
   
   		if(flag == 0) then
    			[ physicalSP-2 ] = -1;  
    			ireturn;
   		endif;

  		[index + 512] = counter;
  		store(1,basic_block);
  
  		offset =  [ FILE_TABLE + 2 * field1];
   		[ FAT + 8 * offset + 1 ] = [ FAT + 8 * offset + 1 ] + 512;  //update the filesize
 		store(5,19);   //commit FAT
 		store(6,20);   //commit DFL
 	endif;
 
	data_block = [ index + 512 ];
	load(1,data_block);
 
 	offset = field2 % 512;
 	[ 512 + offset ] = arg2;   //word written
 	store(1,data_block);
 	[currentPCB + 15 + 2 * arg1 + 1] =  [currentPCB + 15 + 2 * arg1 + 1] + 1;          //inc LSEEK pos by 1
 
  	[ physicalSP-2 ] = 0;      //return with a 0 
    	ireturn;
endif;
