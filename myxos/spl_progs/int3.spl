alias physicalSP S0;
physicalSP= ([PTBR + 2* (SP/512)] *512) + (SP%512);
alias syscallno S1;
syscallno= [physicalSP-1];
alias arg2 S2;
arg2= [physicalSP-3];
alias arg1 S3;
arg1=[physicalSP-4];
if( syscallno == 6) then
	if( arg1<0 || arg1> 7) then
		[physicalSP-2]= -1;
		ireturn;
	endif;
	alias PCB S4;
	PCB = READY_LIST + 32 * ((PTBR-1024)/8);
	if( [PCB +15 + 2*arg1] == -1) then
		[physicalSP-2]= -1;
		ireturn;
	endif;
	alias swoft S5;
	swoft = [PCB + 15 + 2*arg1];
	alias fatindex S6;
	fatindex= [FILE_TABLE + 2*swoft];
	alias filesize S7;
	filesize = [FAT + 8*fatindex + 1];
	if( arg2< 0 || arg2>filesize) then
		[physicalSP-2]= -1;
		ireturn;
	endif;
	[PCB +15 + 2*arg1 + 1] = arg2;
	[physicalSP-2]= 0;
	ireturn;
else
	if( arg1<0 || arg1> 7) then
		[physicalSP-2]= -1;
		ireturn;
	endif;
	alias PCB S4;
	PCB = READY_LIST + 32 * ((PTBR-1024)/8);
	if( [PCB +15 + 2*arg1] == -1) then
		[physicalSP-2]= -1;
		ireturn;
	endif;
	alias swoft S5;
	alias lseek S6;
	swoft = [PCB + 15 + 2*arg1];
	lseek = [PCB + 15 + 2*arg1 + 1];
	alias fatindex S7;
	fatindex = [FILE_TABLE + 2*swoft];
	alias basicblk S8;
	basicblk = [FAT + 8*fatindex + 2];
	load(1, basicblk);
	if( lseek == [FAT + 8*fatindex + 1]) then
		[physicalSP-2]= -1;
		ireturn;
	endif;
	alias index S9;
	index = lseek/512;
	alias datablk S10;
	datablk = [512 + index];
	load(1, datablk);
	alias offset S11;
	offset = lseek%512;
	alias word S12;
	word = [512 +offset];
	[physicalSP -3] = word;
	[PCB + 15 + 2*arg1 + 1] = [PCB + 15 + 2*arg1 + 1] +1;
	[physicalSP-2]= 0;
	ireturn;
endif;
