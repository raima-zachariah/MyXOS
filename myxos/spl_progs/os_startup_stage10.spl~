load(7,1);   // exception handler
load(8,2);


[READY_LIST + 0]=0;

load(25,21); //init
load(26,22);
load(27,23);

PTBR=1024;
PTLR=4;
[PTBR+0]=25;
[PTBR+1]="00";
[PTBR+2]=26;
[PTBR+3]="00";
[PTBR+4]=27;
[PTBR+5]="00";
[PTBR+6]=28;
[PTBR+7]="01";
[READY_LIST+1]=2;
SP=3*512;
BP=3*512;
[28*512]=0;

load(11,5); //int1
load(12,6); 

load(13,7); //int2
load(14,8);

load(15,9); //int3
load(16,10);

load(17,11); //int 4
load(18,12); 

load(19,13); //int 5
load(20,14); 

load(21,15);  //int 6
load(22,16);

load(23,17);  //int7
load(24,18);


load(9,3);  //timer
load(10,4);

load(5,19); //FAT
load(6,20);  //DFL

alias counter S0;
counter = 0;
while ( counter < 128) do          // 64 entries, each of size 2 words
	[ FILE_TABLE + counter + 0] = -1;  // Set FATidx to invalid -1
	[ FILE_TABLE + counter + 1] = 0;   // Set File open count to 0
	counter = counter + 2;             // Move to next
endwhile;

counter = 15;
while(counter <= 30) do
	[READY_LIST + counter] = -1;
	counter = counter + 1;
endwhile;

[READY_LIST + 31] = 0; // setParent PID

alias MFL S2; //Memory_Free_List
MFL = 1280;
counter = 0;

while ( counter <= 28) do          //MFL of the first 28 pages is set to 1
	[MFL + counter] = 1;
	counter = counter + 1;
endwhile;

counter = 0;
alias index S4;
index = 33;

while ( counter < 32) do               //PCB of all d processes set to 0
	[READY_LIST + index] = 0;
	index = index + 32;
	counter = counter + 1;
endwhile;

ireturn;








